% Generated by roxygen2 (4.0.2): do not edit by hand
\name{occ_issues}
\alias{occ_issues}
\title{Parse and examine further GBIF issues on a dataset.}
\usage{
occ_issues(.data, ..., mutate = NULL)
}
\arguments{
\item{.data}{Output from a call to \code{occ_search}}

\item{...}{Named parameters to only get back (e.g., cdround), or to remove (e.g. -cdround).}

\item{mutate}{(character) One of:
\itemize{
 \item split Split issues into new columns.
 \item split_expand Split into new columns, and expand issue names.
 \item expand Expand issue abbreviated codes into descriptive names.
}
For split and split_expand, values in cells become y ("yes") or n ("no").}
}
\description{
Parse and examine further GBIF issues on a dataset.
}
\examples{
\donttest{
# Parsing output by issue
(res <- occ_search(geometry='POLYGON((30.1 10.1, 10 20, 20 40, 40 40, 30.1 10.1))', limit = 50))
## what do issues mean, can print whole table, or search for matches
head(gbifissues)
gbifissues[ gbifissues$code \%in\% c('cdround','cudc','gass84','txmathi'), ]
## or parse issues in various ways
### remove data rows with certain issue classes
library('magrittr')
res \%>\% occ_issues(-gass84, -mdatunl)
### split issues into separate columns
res \%>\% occ_issues(mutate = "split")
### expand issues to more descriptive names
res \%>\% occ_issues(mutate = "expand")
### split and expand
res \%>\% occ_issues(mutate = "split_expand")
### split, expand, and remove an issue class
res \%>\% occ_issues(-gass84, mutate = "split_expand")

# Or you can use occ_issues without \%>\%
occ_issues(res, -gass84, mutate = "split_expand")
}
}
\references{
\url{http://www.gbif.org/developer/summary}
}

